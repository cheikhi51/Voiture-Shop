services:
  # MariaDB
  mariadb:
    image: mariadb:10.11
    container_name: mariadb-springboot
    environment:
      MYSQL_ROOT_PASSWORD: hamadach2003
      MYSQL_DATABASE: springboot
      MYSQL_USER: admin
      MYSQL_PASSWORD: 1234
    ports:
      - "3306:3306"
    volumes:
      - mariadb_data:/var/lib/mysql
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "healthcheck.sh", "--connect", "--innodb_initialized"]
      start_period: 10s
      interval: 10s
      timeout: 5s
      retries: 3

  # Backend Spring Boot
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      # Application
      SPRING_APPLICATION_NAME: SpringDataRest
      SERVER_PORT: 8081

      # Security
      SPRING_SECURITY_USER_NAME: admin
      SPRING_SECURITY_USER_PASSWORD: 1234
      SPRING_SECURITY_USER_ROLES: ADMIN

      # MariaDB Configuration
      SPRING_DATASOURCE_URL: jdbc:mariadb://mariadb:3306/springboot
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: hamadach2003
      SPRING_DATASOURCE_DRIVER_CLASS_NAME: org.mariadb.jdbc.Driver

      # JPA Configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_JPA_GENERATE_DDL: "true"
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.MariaDBDialect

      # Spring Data REST
      SPRING_DATA_REST_BASE_PATH: /api

      # Actuator Configuration
      MANAGEMENT_SERVER_PORT: 8082
      MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: health,metrics,prometheus,info,env,beans
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: always
      MANAGEMENT_ENDPOINT_HEALTH_SHOW_COMPONENTS: always
      MANAGEMENT_ENDPOINT_PROMETHEUS_ENABLED: "true"
      MANAGEMENT_METRICS_EXPORT_PROMETHEUS_ENABLED: "true"
      MANAGEMENT_METRICS_TAGS_APPLICATION: SpringDataRest

      # Enable specific metrics
      MANAGEMENT_METRICS_ENABLE_JVM: "true"
      MANAGEMENT_METRICS_ENABLE_SYSTEM: "true"
      MANAGEMENT_METRICS_ENABLE_LOGBACK: "true"
      MANAGEMENT_METRICS_ENABLE_HIKARICP: "true"
    depends_on:
      mariadb:
        condition: service_healthy
    networks:
      - app-network

  # Frontend React - FIXED PATH
  frontend:
    build:
      context: C:/Users/cheik/reactSpringApp
      dockerfile: Dockerfile
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network

  # Prometheus
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.enable-lifecycle'
    networks:
      - app-network
    depends_on:
      - backend

  # Grafana
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana
    networks:
      - app-network
    depends_on:
      - prometheus

volumes:
  mariadb_data:
  grafana_data:

networks:
  app-network:
    driver: bridge